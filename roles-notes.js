[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>Contentinfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> Img\n      <input type=\"checkbox\" /> Checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> Textbox\n      <li>Listitem</li>\n      <ul>Listgroup</ul>\n    </div>\n  );\n}\n\nrender(<RoleExample />);\n","type":"code","id":"6gs6v"},{"content":"test('can find elements by role', () => {\n  render(<RoleExample />);\n\n  const roles = [\n    'link',\n    'button',\n    'contentinfo',\n    'heading',\n    'banner',\n    'img',\n    'checkbox',\n    'spinbutton',\n    'radio',\n    'textbox',\n    'listitem',\n    'list'\n  ];\n\n  \n  roles.forEach(role => {\n    const el = screen.getByRole(role);\n\n    expect(el).toBeInTheDocument();\n  })\n\n  \n});","type":"code","id":"bttjn"},{"content":"function AccessibleName() {\r\n  return (\r\n    <div>\r\n    <button>Submit</button>\r\n    <button>Cancel</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<AccessibleName/>)","type":"code","id":"8v6bz"},{"content":"test('it can select by accessible name', () => {\r\n  render(<AccessibleName/>);\r\n\r\n  const submitButton = screen.getByRole('button', {\r\n    name: /submit/i\r\n  })\r\n  const cancelButton = screen.getByRole('button', {\r\n    name: /cancel/i\r\n  })\r\n\r\n  expect(submitButton).toBeInTheDocument();\r\n  expect(cancelButton).toBeInTheDocument();\r\n})","type":"code","id":"w7ouu"},{"content":"function MoreNames() {\r\n  return (\r\n    <div>\r\n    <label htmlFor='email'>Email</label>\r\n    <input id='email'/>\r\n    <label htmlFor='search'>Search</label>\r\n    <input id='search'/>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<MoreNames/>)","type":"code","id":"9r0f0"},{"content":"test('it shows an email and search input', () => {\r\n  render(<MoreNames/>);\r\n  \r\n  const emailInput = screen.getByRole('textbox', {\r\n    name: /email/i\r\n  })\r\n\r\n  const searchInput = screen.getByRole('textbox', {\r\n    name: /search/i\r\n  })\r\n\r\n  expect(emailInput).toBeInTheDocument();\r\n  expect(searchInput).toBeInTheDocument();\r\n})","type":"code","id":"i88yo"},{"content":"function IconButtons() {\r\n  return (\r\n    <div>\r\n      <button aria-label='sign in'>\r\n        <svg />\r\n      </button>\r\n      <button aria-label='sign out'>\r\n        <svg />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<IconButtons/>)","type":"code","id":"4f9ad"},{"content":"test('it can select elements based on label', () => {\r\n  render(<IconButtons/>);\r\n\r\n\r\n  const signInButton = screen.getByRole('button', {\r\n    name: /sign in/i\r\n  })\r\n\r\n  const signOutButton = screen.getByRole('button', {\r\n    name: /sign out/i\r\n  })\r\n\r\n  expect(signInButton).toBeInTheDocument();\r\n  expect(signOutButton).toBeInTheDocument();\r\n})","type":"code","id":"2815p"}]